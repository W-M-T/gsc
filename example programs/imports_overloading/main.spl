flip(n, l) :: Int [Int] -> [Int]
{
    if( n <= 0 ) {
        return l;
    }
    else {
        return flop(n-1, 0:l);
    }
}

flop(n, l) :: Int [Int] -> [Int]
{
    return flip(n, 1:l);
}

f(x) :: [Int] -> [Int]
{
    return 2 : x;
}

main() :: -> Int
{
    [Int] a = [];

    a = flop(2, a);

    return a.hd;
}